SprayFire is a fully unit-tested, light-weight PHP framework for developers who
want to make simple, secure, dynamic website content.  Some of the features built
into SprayFire will include:

- Full support of PHP 5.3+, most importantly including the use of namespaces
- Prepared statements for all CRUD functionality
- Automatic escaping of output on responses
- A simple but flexible templating system using built in PHP functionality
- An interface driven, fully extensible API allowing virtually any component of
the framework to be implemented at the application's needs
- A completely domain driven Model interpretation utilizing a custom-built data
persistence solution.
- Easy support for outside plugins and libraries that support PHP 5.3+.
- A reimagining of the normal "MVC" design pattern into something we here at SprayFire
like to call "MRC", or Model-Response-Controller.  Please check out the wiki for
more information on exactly how SprayFire interprets this design pattern.

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

SprayFire is currently in development stage, the interface and API provided by the
framework is completely subject to change at this point and nothing found in the
code at this point is considered 'stable'.  At the moment, consider SprayFire to
be in a very 'volatile' state.

The framework wiki is a more reliable, stable source for information on the current
state of the framework and the future of SprayFire.

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Please check out the wiki for more information!
https://github.com/cspray/SprayFire/wiki/

Testing Instructions
================================================================================
Framework objects that can be reasonably unit tested will have those tests stored
in /libs/SprayFire/Test/Cases/.  If you use the configuration.xml file stored in
the parent folder, /libs/SprayFire/Test/, you should be setup with a test suite
of all the tests and it also includes the appropriate bootstrap needed and sets
up code coverage reports.  Be aware that you may have to adjust the paths pointed
to in this configuration file to match your system.

The SprayFire development team consists of:
================================================================================

Charles Sprayberry                              Dyana Stewar
Lead Developer and Creator                      Graphic Designer
Benevolent Dictator for Life                    twitter: @Dy249
twitter: @charlesspray                          github: Dyana
github: cspray