<?php

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// The below variables can be changed to adjust the implementation details
// of the framework's initialization process.
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// Please note that changing the names of variables in this file will have horrible
// awful consequences that probably entails some things failing horribly.  Please
// do not modify any variable names, add any variables or otherwise modify this
// code outside of the values of the variables you see below.

// NO TRAILING SLASHES ON DIRECTORIES! NO TRAILING SLASHES ON DIRECTORIES!

/**
 * @var $libsPath the directory SprayFire and third-party code is stored in
 */
$libsPath = $installPath . '/libs';

/**
 * @var $appPath the directory the app libraries are stored in
 */
$appPath = $installPath . '/app';

/**
 * @var $logsPath the directory holding logs generated by SprayFire
 */
$logsPath = $installPath . '/logs';

/**
 * @var $configPath the directory holding configuration values used by SprayFire
 */
$configPath = $installPath .'/config';

/**
 * @var $webPath the directory holding web accessible files
 */
$webPath = $installPath . '/web';

/**
 * @brief This file should be located in the \a $configPath
 *
 * @var $primaryConfigFile sub-directory and file name for the primary SprayFire configuration file
 */
$primaryConfigFile = array('json', 'sprayfire-configuration.json');

/**
 * @brief This file should be located in the \a $configPath
 *
 * @var $routesConfigFile sub-directory and file name for the SprayFire routes configuration file
 */
$routesConfigFile = array('json', 'routes.json');

/**
 * @brief This file should be located in the \a $logsPath
 *
 * @var $errorLogFile sub-directory and file name for the SprayFire error handling log file
 */
$errorLogFile = array('errors.txt');

/**
 * @brief This file should be located in the \a $webPath
 *
 * @var $serverErrorContent sub-directory and file name for content to be displayed
 *      in case of a 500 Internal Server Error.
 */
$serverErrorContent = array('500.html');

/**
 * @brief This array should hold whatever headers you feel is appropriate for your
 * app to send back on a 500 server error response.
 *
 * @details
 * Please note, it is required that you put in the appropriate HTTP status code for
 * your server.
 *
 * @var $headersFor500Response an array of headers to be set by the exception handler
 *      when a 500 error response is sent.
 */
$headersFor500Response = array();
$headersFor500Response[] = 'HTTP/1.1 500 Internal Server Error';
$headersFor500Response[] = 'Content-type: text/html;charset=UTF-8';
$headersFor500Response[] = 'X-Powered-By: SprayFire Framework';
