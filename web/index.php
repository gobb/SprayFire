<?php
/**
 * @file
 * @brief The primary intialization script for SprayFire
 *
 * @details
 * SprayFire is a fully unit-tested, light-weight PHP framework for developers who
 * want to make simple, secure, dynamic website content.
 *
 * SprayFire repository: http://www.github.com/cspray/SprayFire/
 *
 * SprayFire wiki: http://www.github.com/cspray/SprayFire/wiki/
 *
 * SprayFire API Documentation: http://www.cspray.github.com/SprayFire/
 *
 * SprayFire is released under the Open-Source Initiative MIT license.
 * OSI MIT License <http://www.opensource.org/licenses/mit-license.php>
 *
 * @author Charles Sprayberry cspray at gmail dot com
 * @copyright Copyright (c) 2011,2012 Charles Sprayberry
 */


// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// The below variables can be changed to adjust the implementation details
// of the framework's initialization process.
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// Please note that changing the names of variables in this file will have horrible
// awful consequences that probably entails some things failing horribly.  Please
// do not modify any variable names, add any variables or otherwise modify this
// code outside of the values of the variables you see below.

// NO TRAILING SLASHES ON DIRECTORIES!

/**
 * @var $installPath the directory libs, app and web directories are stored in
 */
$installPath = \dirname(__DIR__);

/**
 * @var $libsPath the directory SprayFire and third-party code is stored in
 */
$libsPath = $installPath . '/libs';

/**
 * @var $appPath the directory the app libraries are stored in
 */
$appPath = $installPath . '/app';

/**
 * @var $logsPath the directory holding logs generated by SprayFire
 */
$logsPath = $installPath . '/logs';

/**
 * @var $configPath the directory holding configuration values used by SprayFire
 */
$configPath = $installPath .'/config';

/**
 * @var $webPath the directory holding web accessible files
 */
$webPath = $installPath . '/web';

/**
 * @brief This file should be located in the \a $configPath
 *
 * @var $primaryConfigFile sub-directory and file name for the primary SprayFire configuration file
 */
$primaryConfigFile = array('json', 'configuration.json');

/**
 * @brief This file should be located in the \a $configPath
 *
 * @var $routesConfigFile sub-directory and file name for the SprayFire routes configuration file
 */
$routesConfigFile = array('json', 'routes.json');

/**
 * @brief This file should be located in the \a $logsPath
 *
 * @var $errorLogFile sub-directory and file name for the SprayFire error handling log file
 */
$errorLogFile = array('errors.txt');

/**
 * @brief This file should be located in the \a $webPath
 *
 * @var $serverErrorContent sub-directory and file name for content to be displayed
 *      in case of a 500 Internal Server Error.
 */
$serverErrorContent = array('500.html');

/**
 * @brief This array should hold whatever headers you feel is appropriate for your
 * app to send back on a 500 server error response.
 *
 * @details
 * Please note, it is required that you put in the appropriate HTTP status code for
 * your server.
 *
 * @var $headersFor500Response an array of headers to be set by the exception handler
 *      when a 500 error response is sent.
 */
$headersFor500Response = array();
$headersFor500Response[] = 'HTTP/1.1 500 Internal Server Error';
$headersFor500Response[] = 'Content-type: text/html;charset=UTF-8';
$headersFor500Response[] = 'Server: Apache';
$headersFor500Response[] = 'X-Powered-By: SprayFire Framework';

// PLEASE DO NOT CHANGE CODE BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING!
// SPRAYFIRE SPRAYFIRE SPRAYFIRE SPRAYFIRE SPRAYFIRE SPRAYFIRE SPRAYFIRE SPRAYFIRE

$SprayFireContainer = include $libsPath . '/SprayFire/Bootstrap/bootstrap.php';

/**
 * @todo The following markup eventually needs to be moved into the default
 * template for HtmlResponder.
 */

// NOTE: The below code is a temporary measure until the templating system is in place

$styleCss = $Directory->getUrlPath('css','sprayfire.style.css');
$sprayFireLogo = $Directory->getUrlPath('images', 'sprayfire-logo-bar-75.png');


if ($SprayFireContainer->getObject('PrimaryConfig')->app->{'development-mode'} === 'on') {
    $errors = 'Errors: ' . \print_r($SprayFireContainer->getObject('ErrorHandler')->getTrappedErrors(), true);
    $memUsage = 'Memory usage: ' . \memory_get_peak_usage() / (1000*1024) . ' mb';
    $runTime = 'Execution time: ' . (\microtime(true) - $startTime) . ' seconds';
    $debugInfo = <<<HTML
            <div id="debug-info" style="margin-top:1em;border:2px solid black;padding:5px;font-family:monospace;">
                <ul>
                    <li>$errors</li>
                    <li>$memUsage</li>
                    <li>$runTime</li>
                </ul>
            </div>
HTML;

} else {
    $debugInfo = '';
}

echo <<<HTML
<!DOCTYPE html>
    <html>
        <head>
            <title>Welcome to SprayFire!</title>
            <link href="{$styleCss}" rel="stylesheet" type="text/css" />
        </head>
        <body>
            <div id="content">
                <div id="header">
                    <h1><img src="{$sprayFireLogo}" id="sprayfire-logo" alt="SprayFire logo" width="200" height="75" /></h1>
                    <ul>
                        <li>ver: {$PrimaryConfig->SprayFire->version}</li>
                        <li>repo: <a href="http://www.github.com/cspray/SprayFire">http://www.github.com/cspray/SprayFire/</a></li>
                        <li>wiki: <a href="http://www.github.com/cspray/SprayFire/wiki/">http://www.github.com/cspray/SprayFire/wiki/</a></li>
                        <li>api docs: coming soon!</li>

                    </ul>
                </div>

                <div id="body">
                    <div id="main-content">
                    </div>
                </div>

                <div id="footer">
                    <p style="text-align:center;"><span class="sprayfire-orange">Spray</span><span class="sprayfire-red">Fire</span> &copy; Charles Sprayberry 2011</p>
                </div>
            </div>
            {$debugInfo}
        </body>
    </html>
HTML;

